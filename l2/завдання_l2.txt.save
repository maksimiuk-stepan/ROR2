1. Встановити Ruby, якщо не встановлено.
2. Створити новий Ruby-файл з розширенням .rb. Приклад: index.rb
3. Викликати в консолі за допомогою ruby створений файл
4. Відкрити створений файл будь-яким улюбленим редактором
5. Написати кілька будь-яких рядків та закоментувати їх
6. Добавити в файл виведення базових 'рубішних' літералів (Fixnum, Float, String)
7. Оголосити кілька змінних із читабельними назвами і вивести ці змінні (також можуть бути Fixnum, Float, String)
8. Попробувати оголосити змінні з недопустимими іменами, запустити файл (п.5), закоментувати рядки, які викликають exceptions (помилки)
9. Оголосити вираз типу total = a + b з перенесенням другого операнда на новий рядок, та переконатися в тому, що Ruby продовжує побудову виразу, якщо в кінці рядка знаходить будь-який оператор
10. Оголосити вираз типу total = a + b з перенесенням другого операнда із оператором на новий рядок, та переконатися в тому, що Ruby ігнорує наступний рядок, якщо бачить завершений вираз
11. total = a + b Перенести + b на новий рядок за допомогою спеціального оператора '\', та переконатися, що Ruby інтерпетуватиме два вирази в двох рядках, як один вираз
12. Написати вираз в якому поділити два цілі числа (наприклад 5 і 2, або 7 і 3), але такі два числа, ділення яких би давало остачу, отримати хибну відповідь
13. Переписати вираз з діленням так, щоб результам був правильним.
14. Спробувати поділити будь-яке числове значення на 0 (отримати помилку)
15 .Поділити дробове число на 0
Напсати вираз використовуючи оператор "остача від ділення"
Оголосити змінну, та піднести її до степеня за допомогою операторо піднесення до степеня
Оголосити рядковий літерал в одинарних лапках
Оголосити рядковий літерал в одинарних лапках з використанням символів, які потрібно екранувати
Оголосити рядковий літерал з інтерполяцією
Оголосити довгий рядковий літерал з перенесенням його на новий рядок за допомогою чимволу "\"
Оголосити рядковий літерал за допомогою рядкових модифікаторів %, %q %Q.
В рядку оголошеному за допомогою %Q інтерполювати будь-яку змінну
Оголосити два рядки та додати їх
Спробувати додати до рядка чілочисельне значення.
Оголосити два однакові рядки і порівняти їх.
Оголосити рядок і продублювати його n-раз за допомогою символу "*"
Оголосити рядок та додати до нього будь-який текст за допомого оператора "<<"
Оголосити рядок 'I love Ruby', використовуючи метод "[ ]" отримати символ 'R', та символ 'I' двома способами.
Оголосити рядок 'Ruby', використовуєчи метод "[ ]" отримати значення nil
Оголосити рядок 'Hello Ruby' та за допомою оператора "[ ]" передаючи отримати підрядок 'Ruby', двома спосабами
Оголосити рядок 'Ruby is awesome' та видалити з нього 'is'. В результаті має бути рядок 'Ruby awesome'
Оголосити рядок 'RUBY' та привести його до виду 'ruby' за допомогою методу. (Необхідний метод потрібно знайти самостійно)
Оголосити рядок 'Ruby courses', та використовуючи метод, вивести кількість символів в рядку.
Оголосити рядок 'Ruby', застосувавши необхідний метод вивести рядок 'ybuR'

Додаткові завдання:

1. Оголосити метод, який має приймати один параметр
2. Викликати метод різними способами, вставляючи додатковий символ між назвою методу та передачею йому параметрів, та викликати метод без додаткових пробілів (Переконати в тому, що пробіли в виклюку методу і передачею йому параметрів має значення і вприває на порядок інтерпретування)
3. Написати вираз 0.4 – 0.3 == 0.1, та переконатися, що даний вираз не є еквівалентним через похибку заокруглення
4. Оголосити рядок в якому б виводилися символи "#{"
5. Написати вираз з використанням типу: "%d %s %f" та інтерполювати змінні в рядку за допомогою методу sprintf
6. Вивести символи € ¥ $ за допомогою юнікод символів
7. Оголосити рядок, та попробувати попрацювати з ним за допомогою різних Рубі методів (посилання на Рубі методи для роботи з рядком додається до уроку)

